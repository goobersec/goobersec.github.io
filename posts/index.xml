<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Goobersec Blog</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on Goobersec Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 28 May 2025 18:07:44 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exploiting Stack-Based Buffer Overflows on x86_64 Windows with Unstripped Binaries</title>
      <link>http://localhost:1313/posts/stack-based-buffer-overflow-on-windows/</link>
      <pubDate>Wed, 28 May 2025 18:07:44 -0400</pubDate>
      <guid>http://localhost:1313/posts/stack-based-buffer-overflow-on-windows/</guid>
      <description>Outline In my previous post, I examined identifying a buffer overflow in a Linux binary. This time, I will be looking at a Windows executable that was provided to me as part of a low-level computing workshop. The goals of this exercise are to walk through the entire process of exploit development, from discovery to exploitation. I will:&#xA;Analyze a Windows binary using both static and dynamic debugging tools Identify vulnerable functions and understand how they fail Observe normal vs.</description>
    </item>
    <item>
      <title>Examining Binaries With Gdb</title>
      <link>http://localhost:1313/posts/examining-binaries-with-gdb/</link>
      <pubDate>Mon, 19 May 2025 23:47:47 -0400</pubDate>
      <guid>http://localhost:1313/posts/examining-binaries-with-gdb/</guid>
      <description>Backstory Recently, to begin my journey in exploit development, I&amp;rsquo;ve been honing skills I never thought I would revisit after failing my first programming class over a decade ago. To be fair, it was C++. I have been combing over lessons about memory, registers, binary, hex, and assembly. While these topics are not exactly fascinating, they are mandatory to know before entering the exploit development sphere.&#xA;I am a member of a cybersecurity community known as Elevate Cyber, and one of the workshops that the creator, Ryan, has made is focused on low-level computing.</description>
    </item>
    <item>
      <title>Welcome to Goobersec Security Blog</title>
      <link>http://localhost:1313/posts/mypost/</link>
      <pubDate>Sun, 18 May 2025 23:33:19 -0400</pubDate>
      <guid>http://localhost:1313/posts/mypost/</guid>
      <description>This is my first post Welcome. If you like this theme, here&amp;rsquo;s what some of the flavors of markdown look like:&#xA;welcome&#xA;welcome&#xA;welcome W E L C O M E ðŸ’¡ Welcome&#xA;Want a nice shell on Linux Mint? Install Zsh Install Oh My Zsh Add syntax highlighting Set up Powerlevel10k </description>
    </item>
  </channel>
</rss>
